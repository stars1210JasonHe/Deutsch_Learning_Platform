# Security Configuration - CRITICAL: Set these in production!
SECRET_KEY=your-super-secure-random-string-at-least-32-characters-long
ENVIRONMENT=development

# Deployment Configuration
HTTPS_ONLY=false   # Set to 'true' for production HTTPS deployments, 'false' for HTTP (NAS/local)

# OpenAI Configuration via OpenRouter (Recommended)
OPENAI_API_KEY=your-openrouter-api-key-here
OPENAI_MODEL=openai/gpt-4o-mini
OPENAI_BASE_URL=https://openrouter.ai/api/v1

# Feature-Specific Models (Optional - falls back to OPENAI_MODEL if not set)
OPENAI_EXAM_MODEL=gpt-4o                  # Better model for exam generation
OPENAI_CHAT_MODEL=openai/gpt-4o-mini      # Chat conversations
OPENAI_ANALYSIS_MODEL=openai/gpt-4o-mini  # Word analysis
OPENAI_TRANSLATION_MODEL=openai/gpt-4o-mini # Translations (not implemented yet)

# Dedicated OpenAI for Exam Generation (Optional - uses main OPENAI_API_KEY if not set)
OPENAI_EXAM_API_KEY=your-direct-openai-api-key-for-exams
OPENAI_EXAM_BASE_URL=https://api.openai.com/v1

# Direct OpenAI for Image Generation (Optional - uses OPENAI_API_KEY if not set)
OPENAI_IMAGE_API_KEY=your-direct-openai-api-key-for-dalle
OPENAI_IMAGE_BASE_URL=https://api.openai.com/v1
OPENAI_IMAGE_MODEL=dall-e-3

# Database
DATABASE_URL=sqlite:///./data/app.db

# Development
DEBUG=false

# CORS Configuration (add your NAS IP/domain here)
# ALLOWED_HOSTS=http://localhost:3000,http://127.0.0.1:3000,http://your-nas-ip:port

# Generate a secure secret key with this command:
# python -c "import secrets; print('SECRET_KEY=' + secrets.token_urlsafe(32))"
